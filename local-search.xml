<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux-2</title>
    <link href="/2022/03/02/Linux-2/"/>
    <url>/2022/03/02/Linux-2/</url>
    
    <content type="html"><![CDATA[<h1 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a>帮助指令</h1><h2 id="帮助信息类"><a href="#帮助信息类" class="headerlink" title="帮助信息类"></a>帮助信息类</h2><p><img src="D:\typora\AllImages\20220228184747.png" alt="image-20220224184447524"></p><p>例如：</p><p><code>man ls</code>：查看目录信息（按住空格键展示更多信息）</p><p><code>ls -al /root</code>：指定root目录，查看下面的所有内容</p><h1 id="文件目录类"><a href="#文件目录类" class="headerlink" title="文件目录类"></a>文件目录类</h1><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><p>显示当前工作目录的绝对路径</p><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><p><code>ls [选项] [目录或文件]</code></p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-a</td><td>显示当前目录所有的文件和目录，包括隐藏的</td></tr><tr><td>-l</td><td>以列表的方式显示信息</td></tr></tbody></table><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><p><code>cd [参数]</code>    切换到指定目录</p><p>参数可以是相对路径或绝对路径</p><p><code>cd ~</code> 或 <code>cd</code> 回到自己的家目录</p><p><code>cd ..</code> 回到当前目录的上一级目录</p><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><p><code>mkdir [选项] 要创建的目录</code>  用于创建目录</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-p</td><td>创建多级目录</td></tr></tbody></table><p><strong>应用案例</strong></p><ol><li>创建一个目录 &#x2F;home&#x2F;dog</li><li>创建多级目录 &#x2F;home&#x2F;animal&#x2F;tiger</li></ol><p><strong>提示</strong>：</p><p>案例2，如果没有animal目录，使用<code>mkdir /home/animal/tiger</code>会报错<code>没有那个文件或目录</code>，应该使用 <strong><code>mkdir -p /home/animal/tiger</code></strong></p><h3 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a>rmdir</h3><p><code>rmdir [选项] 要删除的目录</code>  用于删除空目录</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-p</td><td>创建多级目录</td></tr></tbody></table><p><strong>应用案例</strong></p><p>删除一个目录 &#x2F;home&#x2F;dog</p><p><strong>提示</strong>：</p><p>如果要删除<code>/home/animal</code>，但是其下还有tiger文件夹，会删除失败<code>目录非空</code>，需要 <strong><code>rm -rf /home/animal</code></strong></p><p><code>rf</code>代表递归</p><h3 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h3><p><code>touch 文件名称</code>  用于创建空文件</p><p>应用案例：</p><p>在&#x2F;home目录下，创建一个空文件hello.txt</p><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><p><strong>基本语法</strong></p><p><code>cp [选项] source dest</code>  用于创建空文件</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>递归复制整个文件夹</td></tr></tbody></table><p><strong>应用案例</strong>：</p><p>1，将 &#x2F;home&#x2F;hello.txt 拷贝到&#x2F;home&#x2F;bbb 目录下</p><p><code>cp hello.txt /home/bbb</code></p><p>在home目录下，只需输入<code>cp hello.txt bbb/</code></p><p>2，递归复制整个文件夹，举例, 比如将 &#x2F;home&#x2F;bbb 整个目录， 拷贝到 &#x2F;opt</p><p><code>cp -r /home/bbb /opt</code></p><p><strong>细节</strong></p><p>强制覆盖不提示的方法：<code>\cp</code></p><p>例如：<code>\cp -r /home/bbb /opt</code></p><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><p><strong>基本语法</strong></p><p><code>rm [选项] 要删除的文件或目录</code>  用于移除文件或目录</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>递归删除整个文件夹</td></tr><tr><td>-f</td><td>强制删除不提示</td></tr></tbody></table><p><strong>应用案例</strong>：</p><p>1，将 &#x2F;home&#x2F;hello.txt 删除</p><p><code>rm /home/hello.txt</code></p><p>2，递归删除整个文件夹&#x2F;home&#x2F;bbb，并且不提示</p><p><code>rm -r /home/hello.txt</code>（每删一个文件都会提示一次）</p><p><code>rm -rf /home/hello.txt</code>（删除文件不提示）</p><h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><p><strong>基本语法</strong></p><p><code>mv oldNameFile newNameFile</code>  重命名</p><p><code>mv /temp/movefile /targetFolder</code>   移动文件</p><p><strong>应用案例</strong>：</p><p>1，将 &#x2F;home&#x2F;cat.txt 文件 重新命名为 pig.txt</p><p><code>mv cat.txt pig.txt</code></p><p>2，将 &#x2F;home&#x2F;pig.txt 文件 移动到 &#x2F;root 目录下</p><p><code>mv pig.txt /root/</code></p><p>移动并且重命名：<code>mv pig.txt /root/cow.txt</code></p><p>3，移动整个目录 , 比如将 &#x2F;opt&#x2F;bbb 移动到 &#x2F;home 下 mv &#x2F;opt&#x2F;bbb &#x2F;home&#x2F;</p><p><code>mv bbb/ /home/</code></p><p>移动bbb文件并且重命名为uuu：<code>mv bbb/ /home/uuu</code></p><blockquote><p>如果文件在同一个目录，就是重命名。</p><p>如果不在，就是移动文件。</p></blockquote><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><p><strong>基本语法</strong></p><p><code>cat [选项] 要查看的文件</code>  查看文件内容</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-n</td><td>显示行号</td></tr></tbody></table><p><strong>应用案例</strong></p><p>查看 &#x2F;etc&#x2F;profile 文件内容，并显示行号</p><p><strong>使用细节</strong><br>cat 只能浏览文件，而不能修改文件，为了浏览方便，一般会带上管道命令 <code>| more</code><br><code>cat -n /etc/profile | more</code></p><blockquote><p>管道命令：类似于把前面的结果交给后面处理</p></blockquote><h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><p><code>more 要查看的文件</code></p><p>more 指令是一个基于 VI 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。more 指令中内置了若干快捷键用于交互。</p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184753.png" alt="image-20220227195131619"></p><h3 id="less"><a href="#less" class="headerlink" title="less"></a>less</h3><p><code>less 要查看的文件</code></p><p>less 指令用来分屏查看文件内容，它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端。</p><p>less指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。</p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184757.png" alt="image-20220227195230358"></p><h2 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h2><p><strong>基本语法</strong></p><p><code>echo [选项] [输出内容]</code>  输出内容到控制台</p><p><strong>应用实例</strong></p><p>在控制台输出hello world</p><p><code>echo &quot;hello,world!&quot;</code></p><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>head 用于显示文件的开头部分内容，默认情况下 head 指令显示文件的前 10 行内容</p><p><strong>基本语法</strong></p><p><code>head 文件</code>  查看文件头 10 行内容</p><p><code>head -n 5 文件</code>  查看文件头 5 行内容，5 可以是任意行数</p><p><strong>应用实例</strong></p><p>查看&#x2F;etc&#x2F;profile 的前面 5 行代码</p><p><code>head -n 5 /etc/profile</code></p><h2 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h2><p>tail 用于输出文件中尾部的内容，默认情况下 tail 指令显示文件的前 10 行内容。</p><p><strong>基本语法</strong></p><p><code>tail 文件</code>  查看文件尾 10 行内容</p><p><code>tail -n 5 文件</code>  查看文件尾 5 行内容，5 可以是任意行数</p><p><code>tail -f 文件</code>  实时追踪该文档的所有更新</p><p><strong>应用实例</strong></p><p>实时监控 mydate.txt , 看看到文件有变化时，是否看到实时的追加 hello,world</p><p><code>tail -f /home/mydate.txt</code></p><blockquote><p>案例会导致当前终端陷入监控状态，需要再打开另一个终端查看效果。</p><p>查看效果举例：打开另一个终端，通过重定向<code>echo &quot;hello&quot; &gt; /home/mydate.txt</code>将”hello”输入到mydate.txt</p><p>暂停监控：<code>ctrl+C</code></p></blockquote><h2 id="输出重定向-gt-和-追加-gt-gt"><a href="#输出重定向-gt-和-追加-gt-gt" class="headerlink" title="输出重定向&gt; 和 追加&gt;&gt;"></a>输出重定向&gt; 和 追加&gt;&gt;</h2><p><strong>基本语法</strong></p><p><code>ls -l &gt;文件</code>  列表的内容写入文件 a.txt 中（覆盖写）</p><p><code>ls -al &gt;&gt;文件</code>  列表的内容追加到文件的末尾</p><p><code>cat 文件 1 &gt; 文件 2</code>  将文件 1 的内容覆盖到文件 2</p><p><code>echo &quot;内容&quot;&gt;&gt; 文件</code>  追加</p><p><strong>应用实例</strong></p><p>1， 将 &#x2F;home 目录下的文件列表 写入到 &#x2F;home&#x2F;info.txt 中, 覆盖写入</p><p><code>ls -l /home &gt; /home/info.txt</code>（如果没有info.txt，则会创建）</p><p>2，将当前日历信息 追加到 &#x2F;home&#x2F;mycal 文件中</p><p><code>cal &gt;&gt; /home/mycal</code></p><p>3，在info.txt里面写入”ok”</p><p><code>echo &quot;ok&quot; &gt; /home/info.txt</code></p><p>4，文件内容覆盖</p><p><code>cat /etc/profile &gt; /home/myprofile</code></p><h2 id="In"><a href="#In" class="headerlink" title="In"></a>In</h2><p>软链接也称为符号链接，类似于 windows 里的快捷方式，主要存放了链接其他文件的路径</p><p><strong>基本语法</strong></p><p><code>ln -s [原文件或目录] [软链接名]</code>  给原文件创建一个软链接</p><p><strong>应用实例</strong></p><p>1， 在&#x2F;home 目录下创建一个软连接 myroot，连接到 &#x2F;root 目录</p><p><code>ln -s /root /home/myroot</code></p><p>可以使用<code>ls -l</code>查看当前的目录</p><p>2，删除软连接 myroot</p><p><code>rm /home/myroot</code></p><blockquote><p>注意：</p><p>删除的时候不能写<code>rm /home/myroot/</code>，不要加最后的斜杠，否则会报错<code>……是一个目录</code></p><p>当我们使用 pwd 指令查看目录时，仍然看到的是软链接所在目录。</p></blockquote><h2 id="history"><a href="#history" class="headerlink" title="history"></a>history</h2><p><strong>基本语法</strong></p><p><code>history</code>  查看已经执行过历史命令</p><p><strong>应用实例</strong></p><p>1， 显示所有的历史命令</p><p><code>history</code></p><p>2，显示最近使用过的 10 个指令</p><p><code>history 10</code></p><p>3， 执行历史编号为 5 的指令</p><p><code>!5</code></p><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><h3 id="显示时间"><a href="#显示时间" class="headerlink" title="显示时间"></a>显示时间</h3><p><strong>基本语法</strong></p><p><code>date</code>    显示当前时间</p><p><code>date +%Y</code>    显示当前年份</p><p><code>date +%m</code>    显示当前月份</p><p><code>date +%d</code>    显示当前是哪一天</p><p><code>date &quot;+%Y-%m-%d %H:%M:%S&quot;</code>    显示年月日时分秒</p><h3 id="设置时间"><a href="#设置时间" class="headerlink" title="设置时间"></a>设置时间</h3><p><strong>基本语法</strong></p><p><code>date -s 字符串时间</code>    显示当前时间</p><p><strong>应用实例</strong></p><p>设置系统当前时间 ， 比如设置成 2020-11-03 20:02:10<br><code>date -s “2020-11-03 20:02:10”</code></p><h2 id="cal"><a href="#cal" class="headerlink" title="cal"></a>cal</h2><p><strong>基本语法</strong></p><p><code>cal</code>    不加选项，显示本月日历</p><p><strong>应用实例</strong></p><p>案例 1: 显示当前日历     <code>cal</code><br>案例 2: 显示 2020 年日历    <code>cal 2020</code></p><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><p>find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端。</p><p><strong>基本语法</strong></p><p><code>find [搜索范围] [选项]</code>    </p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184807.png" alt="image-20220227201254477"></p><p><strong>应用实例</strong></p><p>1， 按文件名：根据名称查找&#x2F;home 目录下的 hello.txt 文件</p><p><code>find /home -name hello.txt</code></p><p>2，按拥有者：查找&#x2F;opt 目录下，用户名称为 nobody 的文件</p><p><code>find /opt -user nobody</code></p><p>3，查找整个 linux 系统下大于 200M 的文件（+n 大于 -n 小于 n 等于, 单位有 k,M,G）</p><p><code>find / -size +200M</code></p><h2 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h2><p>locate 指令可以快速定位文件路径。</p><p>locate 指令利用<u>事先建立的系统</u>中所有文件名称及路径的 locate 数据库实现快速定位给定的文件。</p><p>Locate 指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确度，管理员必须定期更新 locate。</p><p><strong>基本语法</strong></p><p><code>locate</code>   </p><p><strong>应用实例</strong></p><p>1，请使用 locate 指令快速定位 hello.txt 文件所在目录</p><p>2， which 指令，可以查看某个指令在哪个目录下，比如 ls 指令在哪个目录</p><p><code>which ls</code></p><p><strong>说明</strong></p><p>由于 locate 指令基于数据库进行查询，所以第一次运行前，必须使用 updatedb 指令创建 locate 数据库。</p><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><p>grep 过滤查找 ， 管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理。</p><p><strong>基本语法</strong></p><p><code>grep [选项] 查找内容 源文件</code></p><p> <img src="https://gitee.com/li-il/pics/raw/master/20220228184812.png" alt="image-20220227201621226"> </p><p><strong>应用实例</strong></p><p>1，请在 hello.txt 文件中，查找 “yes” 所在行，并且显示行号</p><p>两种写法：</p><p><code>car /home/hello.txt | grep -n &quot;yes&quot;</code></p><p><code>grep -n &quot;yes&quot; /home/hello.txt</code></p><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><h3 id="gzip-x2F-gunzip"><a href="#gzip-x2F-gunzip" class="headerlink" title="gzip&#x2F;gunzip"></a>gzip&#x2F;gunzip</h3><p><strong>基本语法</strong></p><p><code>gzip 文件</code>   压缩文件，只能将文件压缩为*.gz 文件</p><p><code>gunzip 文件.gz </code>   解压缩</p><p><strong>应用实例</strong></p><p>1，gzip 压缩， 将 &#x2F;home 下的 hello.txt 文件进行压缩</p><p><code>gzip /home/hello.txt</code><br>2， gunzip 压缩， 将 &#x2F;home 下的 hello.txt.gz 文件进行解压缩<br><code>gunzip /home/hello.txt.gz</code></p><h3 id="zip-x2F-unzip"><a href="#zip-x2F-unzip" class="headerlink" title="zip&#x2F;unzip"></a>zip&#x2F;unzip</h3><p><strong>基本语法</strong></p><p><code>zip [选项] XXX.zip</code>   </p><p><code>unzip [选项] XXX.zip </code>   </p><blockquote><p>zip常用选项</p><p><code>-r</code>    递归压缩，即压缩目录</p><p>unzip  常用选项</p><p>-d&lt;目录&gt;   指定解压后文件的存放目录</p></blockquote><p><strong>应用实例</strong></p><p>1，将 &#x2F;home 下的 所有文件&#x2F;文件夹进行压缩成 myhome.zip<br><code>zip -r myhome.zip /home/</code><br>2，将 myhome.zip 解压到 &#x2F;opt&#x2F;tmp 目录下<br><code>mkdir /opt/tmp</code><br><code>unzip -d /opt/tmp /home/myhome.zip</code></p><h3 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h3><p>tar 指令 是打包指令，最后打包后的文件是 .tar.gz 的文件。</p><p><strong>基本语法</strong></p><p><code>tar [选项] XXX.tar.gz 打包的内容  </code>  打包目录，压缩后的文件格式.tar.gz</p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184816.png" alt="image-20220227202301503"></p><p><strong>应用实例</strong></p><p>1，压缩多个文件，将 &#x2F;home&#x2F;pig.txt 和 &#x2F;home&#x2F;cat.txt 压缩成 pc.tar.gz<br><code>tar -zcvf pc.tar.gz /home/pig.txt /home/cat.txt</code><br>2，将&#x2F;home 的文件夹 压缩成 myhome.tar.gz<br><code>tar -zcvf myhome.tar.gz /home/</code><br>3，将 pc.tar.gz 解压到当前目录<br><code>tar -zxvf pc.tar.gz</code><br>4，将 myhome.tar.gz 解压到 &#x2F;opt&#x2F;tmp2目录下<br><code>mkdir /opt/tmp2</code></p><p><code>tar -zxvf /home/myhome.tar.gz -C /opt/tmp2</code></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-1</title>
    <link href="/2022/03/01/Linux-1/"/>
    <url>/2022/03/01/Linux-1/</url>
    
    <content type="html"><![CDATA[<h1 id="简介和环境配置"><a href="#简介和环境配置" class="headerlink" title="简介和环境配置"></a>简介和环境配置</h1><h2 id="下载VMWare"><a href="#下载VMWare" class="headerlink" title="下载VMWare"></a>下载VMWare</h2><p>详情参见老师的文档。</p><blockquote><p>补充：</p><p>Linux一共有三个分区，东西都放在根分区</p><p>交换分区：可以临时作为内存的补充，但是速度没有真实内存快。</p><p>boot：1G</p><p>swap：2G</p><p>\</p></blockquote><h2 id="下载CentOS"><a href="#下载CentOS" class="headerlink" title="下载CentOS"></a>下载CentOS</h2><p>详情请见老师的文档。</p><p>CentOS细节介绍</p><blockquote><p><strong>软件选择：</strong><img src="https://gitee.com/li-il/pics/raw/master/20220228184527.png" alt="image-20220223174716248">软件选择之后会检查安装源，需要等待一会儿。</p><p><strong>配置分区：</strong></p><p>选择【我要配置分区】，点击【完成】，后弹出界面。<img src="https://gitee.com/li-il/pics/raw/master/20220228184529.png" alt="image-20220223175032299"></p><p>接下来配置<img src="https://gitee.com/li-il/pics/raw/master/20220228184531.png" alt="image-20220223175441323">然后点击【接受更改】。</p><p><strong>KDUMP：</strong></p><p>是一种内核崩溃转储机制，再系统崩溃的时候用于捕获系统信息。</p><p>如果是实际的生产环境中，可以开启KDUMP。</p><p><strong>设置网络：</strong></p><p>打开即可。</p><p><strong>提醒</strong>：</p><p>实际生活中密码一定要复杂一点。可以使用随机密码生成的。</p><p>输入tar vm之后输入tab，可以自动补全</p></blockquote><h2 id="网络连接的三种方式"><a href="#网络连接的三种方式" class="headerlink" title="网络连接的三种方式"></a>网络连接的三种方式</h2><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184533.png" alt="image-20220223174232519"></p><h2 id="虚拟机的克隆"><a href="#虚拟机的克隆" class="headerlink" title="虚拟机的克隆"></a>虚拟机的克隆</h2><p>如果已经安装了一台虚拟机，就没必要重新安装，直接克隆即可。</p><ol><li><p>直接拷贝一份已经安装好的虚拟机文件。</p><p>在文件夹里面复制粘贴。然后再VM里面选择【打开】。<img src="https://gitee.com/li-il/pics/raw/master/20220228184539.png" alt="image-20220223182419425"></p></li><li><p>使用vm的安装操作</p><p>注意：<strong>克隆时需要先关闭linux系统</strong><img src="https://gitee.com/li-il/pics/raw/master/20220228184541.png" alt="image-20220223182150269"></p></li></ol><h2 id="虚拟机快照"><a href="#虚拟机快照" class="headerlink" title="虚拟机快照"></a>虚拟机快照</h2><p>如果在使用虚拟机的时候，想回到原来的某一个正常的状态（担心某些误操作造成系统异常），需要快照管理。</p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184633.png" alt="image-20220223182746020"></p><p>返回某快照：在【快照管理】界面，选择需要回到的快照，点击【转到】。</p><h2 id="虚拟机的迁移和删除"><a href="#虚拟机的迁移和删除" class="headerlink" title="虚拟机的迁移和删除"></a>虚拟机的迁移和删除</h2><p>虚拟机的迁移：其实就是文件夹整体的剪切。</p><p>虚拟机的删除：VMWare右键选择【移除】，然后在文件夹中删除整个文件夹。</p><h2 id="安装VMware-Tools"><a href="#安装VMware-Tools" class="headerlink" title="安装VMware Tools"></a>安装VMware Tools</h2><p><strong>场景：</strong>如果想在windows主机和linux虚拟机上都操作同一个文件夹，需要安装VMTools。</p><p><strong>提示：</strong>需要用rooot用户来操作。</p><p><strong>技巧：</strong>VMware Tools安装是灰色的，需要在虚拟机开机之后，没有完全开机之前点击。</p><ol><li>进入CentOS桌面，然后弹出桌面上的驱动。</li><li>点击Vmware菜单【虚拟机】，点击【安装VMTools】，然后桌面上会出现一个光盘名为【VMTools】。</li><li>打开光盘会出现一个文件夹，将文件夹【VMwareTools-10.3.22-15902021.tar.gz】拷贝到【其他位置】【计算机】的&#x2F;opt文件夹下。</li><li>打开终端，进入opt文件夹，使用解压命令<code>tar</code>得到一个安装文件<img src="C:\Users\LXR\AppData\Roaming\Typora\typora-user-images\image-20220223200001696.png" alt="image-20220223200001696"></li><li><code>cd vmware-tools-distrib/</code>进入vm解压后的文件夹下，执行<code>./vmware-install.pl</code>，然后一路回车即可。</li><li>注意：安装的时候需要有gcc，可以通过<code>gcc -v</code>查看自己的gcc版本。</li></ol><p><strong>设置共享文件夹：</strong></p><ol><li><p>设置一个共享文件夹，比如<code>F:\WorkSpace\linux\myshare</code>在文件夹下建立一个<code>a.txt</code></p></li><li><p>打开设置，<img src="https://gitee.com/li-il/pics/raw/master/20220228184639.png" alt="image-20220223200736307"></p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184641.png" alt="image-20220223200911235"></p><p>在【主机路径】【浏览】下选择刚刚的共享文件夹，然后【下一步】，默认【启用此共享】即可。</p></li><li><p>在<code>计算机/mnt/hgfs</code>下，可以查看共享文件夹。</p></li></ol><p>但是在实际开发中，文件的上传下载是通过远程方式完成的。（经典白学预警 ）</p><h2 id="linux目录结构"><a href="#linux目录结构" class="headerlink" title="linux目录结构"></a>linux目录结构</h2><h3 id="一切皆文件"><a href="#一切皆文件" class="headerlink" title="一切皆文件"></a>一切皆文件</h3><ol><li><p>在linux中，一切皆文件，并把硬件映射成文件形式，且目录无法修改。</p></li><li><p>linux的文件系统是采用<u>级层式的树状目录结构</u>，在此结构中的最上层是根目录<code>/</code>，然后在此目录下再创建其他的目录。</p></li></ol><h3 id="具体的目录结构"><a href="#具体的目录结构" class="headerlink" title="具体的目录结构"></a>具体的目录结构</h3><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184644.png" alt="image-20220223214801594"><img src="https://gitee.com/li-il/pics/raw/master/20220228184647.png" alt="image-20220223214951427"></p><p><img src="C:\Users\LXR\AppData\Roaming\Typora\typora-user-images\image-20220223215020655.png" alt="image-20220223215020655"></p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184648.png" alt="image-20220223214827389"></p><h3 id="远程"><a href="#远程" class="headerlink" title="远程"></a>远程</h3><p>情景：在公司中开发时，就有以下特点</p><ol><li>linux 服务器是开发小组共享</li><li>正式上线的项目是运行在公网</li><li>因此程序员需要远程登录到 Linux 进行项目管理或者开发</li><li>画出简单的网络拓扑示意图(帮助理解)</li></ol><h4 id="远程登陆"><a href="#远程登陆" class="headerlink" title="远程登陆"></a>远程登陆</h4><ol><li><p>下载XShell</p></li><li><p>测试</p></li></ol><p>在Linux系统下打开终端，查看ip</p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184651.png" alt="image-20220223215708994"></p><p>然后在Windows系统下打开终端，尝试连接</p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184652.png" alt="image-20220223215741625"></p><p>打开XShell，【新建】，名称可以随便写但是主机必须正确。<img src="https://gitee.com/li-il/pics/raw/master/20220228184701.png" alt="image-20220223215824277"></p><p>就可以连接到Linux系统了<img src="https://gitee.com/li-il/pics/raw/master/20220228184655.png" alt="image-20220223215953859"></p><h4 id="远程传输"><a href="#远程传输" class="headerlink" title="远程传输"></a>远程传输</h4><p>打开Xftp，点击【新建】，<u>注意端口号也是22</u></p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184707.png" alt="image-20220223220130019"></p><blockquote><p>乱码解决：左上角文件 - 当前会话属性 - 左上角 常规，点击旁边的“选项”，将“编码”改为UTF-8</p></blockquote><p> <img src="https://gitee.com/li-il/pics/raw/master/20220228184710.png" alt="image-20220223220410675"></p><blockquote><p>windows和linux之间的文件传输是双向的。</p><p>点击【传输】即可。</p></blockquote><h1 id="VI和VIM"><a href="#VI和VIM" class="headerlink" title="VI和VIM"></a>VI和VIM</h1><ol><li>Linux 系统会内置 vi 文本编辑器</li><li>Vim 具有程序编辑的能力，可以看做是 Vi 的增强版本，可以主动的以字体颜色辨别语法的正确性，方便程序设计。<br>代码补完、编译及错误跳转等方便编程的功能<h2 id="VI和VIM的三种常用模式"><a href="#VI和VIM的三种常用模式" class="headerlink" title="VI和VIM的三种常用模式"></a>VI和VIM的三种常用模式</h2></li></ol><p><strong>正常模式</strong><br>VM打开直接进入默认模式，可以使用『上下左右』按键来移动光标，『删除字符』或『删除整行』来处理档案内容， 『复制、粘贴』来处理文件数据。</p><p><strong>插入模式</strong></p><p>按下 i, I, o, O, a, A, r, R 等任何一个字母之后才会进入编辑模式, 一般来说按 i 即可</p><p><strong>命令行模式</strong></p><p>先输入esc，在输入<code>:</code>，可以完成一系列命令操作。</p><h2 id="VI和VIM的基本使用"><a href="#VI和VIM的基本使用" class="headerlink" title="VI和VIM的基本使用"></a>VI和VIM的基本使用</h2><p>使用VIM开发Helloworld.java程序</p><p>在控制台输入<code>vim Hello.java</code>，表示开启一个vim编辑器。</p><p>然后写入java程序后，按住<code>esc</code>，输入<code>:wq</code>表示写入并退出， <code>:q!</code>强制退出不保存。</p><h2 id="各种模式之间的相互切换"><a href="#各种模式之间的相互切换" class="headerlink" title="各种模式之间的相互切换"></a>各种模式之间的相互切换</h2><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184714.png" alt="image-20220223223707481"></p><h3 id="快捷键使用练习"><a href="#快捷键使用练习" class="headerlink" title="快捷键使用练习"></a>快捷键使用练习</h3><ol><li><p>拷贝当前行<code>yy</code> , 拷贝当前行向下的 5 行<code>5yy</code>，并粘贴（输入 p）。</p></li><li><p>删除当前行<code>dd</code>, 删除当前行向下的 5 行 <code>5dd</code></p></li><li><p>在文件中查找某个单词 [命令行下<code> /关键字</code>， 回车 查找 ,输入<code>n</code> 就是查找下一个 ]</p></li></ol><ol start="4"><li>设置文件的行号，取消文件的行号<br> 命令行下 <code>:set nu</code> 和<code>:set nonu</code></li></ol><ol start="5"><li><p>编辑 &#x2F;etc&#x2F;profile 文件，在一般模式下, 使用快捷键到该文档的最末行<code>G</code>和最首行<code>gg</code></p></li><li><p>在一个文件中输入 “hello” ,在一般模式下, 然后又撤销这个动作<code>u</code></p></li><li><p>编辑&#x2F;etc&#x2F;profile 文件，在一般模式下,并将光标移动到 , 输入<code> 20</code>,再输入<code> shift+g</code></p></li><li><blockquote><p>yy：在正常模式下输入，表示拷贝，但是如果是输入模式下，就是输入yy</p><p>输入yy p，表示拷贝</p></blockquote></li></ol><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184717.png" alt="image-20220224120333362"></p><h2 id="登陆注销"><a href="#登陆注销" class="headerlink" title="登陆注销"></a>登陆注销</h2><p><strong>介绍：</strong></p><p>登录时尽量少用root账号登录，因为他是系统管理员，最大的权限，避免操作失误，可以利用普通用户登录，登录后再用  <code>su - 用户名</code>  命令切换成系统管理员身份</p><p>在提示符下输入  <code>logout </code>  可注销用户</p><p><strong>注意</strong>：</p><p>logout注销指令在运行级别3下有效，在图形级别下无效。</p><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><p>Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统</p><p>由一个root用户可以创建多个用户（例如tom）。</p><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><p><strong>基本语法</strong></p><p><code>useradd 用户名</code></p><p><strong>应用案例</strong></p><p>添加一个用户milan</p><blockquote><ol><li><p>当创建米兰用户成功的时候，自动创建该用户的家目录<code>/home/milan</code>，并且在登陆的时候会默认进入该用户的家目录下。</p></li><li><p>也可以通过 <code>useradd -d 指定目录 新的用户名</code>来给新创建的用户指定家目录</p></li></ol><blockquote><p>例如  <code>useradd -d /home/kkk king</code>意为：创建一个用户king，用户的家目录为kkk。</p></blockquote></blockquote><h2 id="指定或修改密码"><a href="#指定或修改密码" class="headerlink" title="指定或修改密码"></a>指定或修改密码</h2><p><strong>基本语法</strong></p><p><code>passwd 用户名</code></p><p><strong>应用案例</strong></p><p>给米兰指定密码</p><blockquote><p>补充：</p><p><code>pwd</code>：显示当前所在目录</p><p><code>id 用户名</code>：查看该用户的信息。</p></blockquote><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p><strong>基本语法</strong></p><p><code>userdel 用户名</code></p><p>&#96;&#96;userdel -r 用户名&#96;</p><p><strong>应用案例</strong></p><p>删除用户milan，但是保留家目录 <code>userdel milan</code></p><p>删除用户milan以及用户主目录 <code>userdel -r milan</code></p><blockquote><p>需要切换root用户，自己不能删除自己</p><p>一般情况下，建议保留用户主目录</p></blockquote><h3 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h3><p>在Linux中，如果当前用户的权限不够，可以通过<code>su - 用户名</code>指令，切换到高权限用户，比如root</p><p><strong>基本语法</strong></p><p><code>su - 用户名</code></p><p><strong>应用案例</strong></p><p>创建一个用户jack，指定密码，然后切换到jack</p><blockquote><ol><li>从权限高的用户切换到权限低的用户，不需要输入密码，反之需要</li><li>当需要切换到原来的用户时候，需要使用<code>exit</code>或者<code>logout</code>指令</li><li>查看当前<u>登录</u>用户<code>whoami</code>或<code>who am i</code></li></ol></blockquote><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><p>系统可以对有共性（权限）的多个用户进行统一的管理</p><p><strong>应用案例</strong></p><p>添加组：<code>groupadd wudang</code></p><p>删除组：<code>groupdel wudang</code></p><p>创建用户的时候加上组：<code>useradd -g wudang zwj</code></p><p>修改组：<code>usermod -g mojiao zwj</code></p><blockquote><p>如果创建用户的时候没有指定组，就会默认创建一个和用户名相同的组并且把用户放进去</p></blockquote><blockquote><p>补充：</p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184722.png" alt="image-20220224123103176"></p></blockquote><h1 id="Linux实操篇-实用指令"><a href="#Linux实操篇-实用指令" class="headerlink" title="Linux实操篇 实用指令"></a>Linux实操篇 实用指令</h1><h2 id="指定运行级别"><a href="#指定运行级别" class="headerlink" title="指定运行级别"></a>指定运行级别</h2><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184725.png" alt="image-20220224123648038"></p><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184727.png" alt="image-20220224124500877"></p><p>查看当前运行级别：<code>systemctl get-default</code></p><p>设置当前运行级别为3：<code>systemctl set-default multi-user.target</code></p><p>如果改变之后再重启，就会进入运行级别为3的界面。</p><h3 id="Linux找回root用户的密码"><a href="#Linux找回root用户的密码" class="headerlink" title="Linux找回root用户的密码"></a>Linux找回root用户的密码</h3><p><strong>方法：</strong></p><ol><li>首先，启动系统，进入开机界面，在界面中按“e”进入编辑界面。如图<img src="https://gitee.com/li-il/pics/raw/master/20220228184736.png" alt="image-20220224125015927"></li><li>进入编辑界面，使用键盘上的上下键把光标往下移动，找到以““Linux16”开头内容所在的行数”，在行的最后面输入：init&#x3D;&#x2F;bin&#x2F;sh。如图<img src="https://gitee.com/li-il/pics/raw/master/20220228184737.png" alt="image-20220224125032894"></li><li>接着，输入完成后，直接按快捷键：<code>Ctrl+x</code> 进入单用户模式。</li><li>接着，在光标闪烁的位置中输入：<code>mount -o remount,rw /</code>（注意：各个单词间有空格），完成后按键盘的回车键（Enter）。</li><li>在新的一行最后面输入：passwd， 完成后按键盘的回车键（Enter）。输入密码，然后再次确认密码即可(韩顺平提示: 密码长度最好8位以上,但不是必须的), 密码修改成功后，会显示passwd…..的样式，说明密码修改成功<img src="https://gitee.com/li-il/pics/raw/master/20220228184742.png" alt="image-20220224131459675"></li><li>接着，在鼠标闪烁的位置中（最后一行中）输入：touch &#x2F;.autorelabel（注意：touch与 &#x2F;后面有一个空格），完成后按键盘的回车键（Enter）</li><li>继续在光标闪烁的位置中，输入：exec &#x2F;sbin&#x2F;init（注意：exec与 &#x2F;后面有一个空格），完成后按键盘的回车键（Enter）,等待系统自动修改密码(韩顺平提示：这个过程时间可能有点长，耐心等待)，完成后，系统会自动重启, 新的密码生效了<img src="https://gitee.com/li-il/pics/raw/master/20220228184744.png" alt="image-20220224131533785"></li></ol><h1 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a>帮助指令</h1><h2 id="帮助信息类"><a href="#帮助信息类" class="headerlink" title="帮助信息类"></a>帮助信息类</h2><p><img src="https://gitee.com/li-il/pics/raw/master/20220228184747.png" alt="image-20220224184447524"></p><p>例如：</p><p><code>man ls</code>：查看目录信息（按住空格键展示更多信息）</p><p><code>ls -al /root</code>：指定root目录，查看下面的所有内容</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/02/08/hello-world/"/>
    <url>/2022/02/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
      <category>PlayStation</category>
      
      <category>Games</category>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
